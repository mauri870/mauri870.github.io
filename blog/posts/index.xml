<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mauri870&#39;s dev blog</title>
    <link>https://mauri870.github.io/blog/posts/</link>
    <description>Recent content in Posts on Mauri870&#39;s dev blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 May 2018 00:05:00 -0300</lastBuildDate>
    
	<atom:link href="https://mauri870.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Audio Spectrograms in Tensorflow</title>
      <link>https://mauri870.github.io/blog/posts/audio-spectrograms-in-tensorflow/</link>
      <pubDate>Thu, 24 May 2018 00:05:00 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/audio-spectrograms-in-tensorflow/</guid>
      <description>&lt;p&gt;A Spectrogram is a picture of sound. A common approach for audio classification tasks is to use spectrograms as input and simply treat the audio as an image. After several tries I finally got an optimized way to integrate the spectrogram generation pipeline into the tensorflow computational graph.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to export the CIFAR10 model to Tensorflow Serving</title>
      <link>https://mauri870.github.io/blog/posts/exporting-cifar10-to-tensorflow-serving/</link>
      <pubDate>Mon, 21 May 2018 23:26:10 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/exporting-cifar10-to-tensorflow-serving/</guid>
      <description>&lt;p&gt;The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. In this blog post I&amp;rsquo;ll cover how to export a trained CIFAR-10 tensorflow model to Tensorflow Serving.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Writing a Golang client for the Tensorflow Serving Inception model</title>
      <link>https://mauri870.github.io/blog/posts/tensorflow-serving-inception-go/</link>
      <pubDate>Sat, 19 May 2018 12:35:00 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/tensorflow-serving-inception-go/</guid>
      <description>&lt;p&gt;Tensorflow Serving is the most optimized way to serve a Tensorflow machine learning model in production. The official tutorials only cover the python client, so lets implement a Go/Golang one.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Opentracing/Jaeger with Laravel</title>
      <link>https://mauri870.github.io/blog/posts/opentracing-jaeger-laravel/</link>
      <pubDate>Sun, 13 May 2018 22:26:06 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/opentracing-jaeger-laravel/</guid>
      <description>&lt;p&gt;Microservices become the new standard for scalable and maintanable arquitectures. Monolithic aplications are splited into smaller pieces to keep things simple and decoupled. Tracing comes in hand when you need to aggregate the events during the request lifecycle between a single or multiple services.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Assembly Linux x64 - Part 1</title>
      <link>https://mauri870.github.io/blog/posts/assembly-linux-x64-part-1/</link>
      <pubDate>Tue, 08 May 2018 21:22:56 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/assembly-linux-x64-part-1/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a person that loves to learn new things, and assembly is one of the most recent topics I decide to dig into.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>