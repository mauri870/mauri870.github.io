<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sound Processing on Mauri870&#39;s dev blog</title>
    <link>https://mauri870.github.io/blog/tags/sound-processing/</link>
    <description>Recent content in Sound Processing on Mauri870&#39;s dev blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 May 2018 00:05:00 -0300</lastBuildDate>
    
	<atom:link href="https://mauri870.github.io/blog/tags/sound-processing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Audio Spectrograms in Tensorflow</title>
      <link>https://mauri870.github.io/blog/posts/audio-spectrograms-in-tensorflow/</link>
      <pubDate>Thu, 24 May 2018 00:05:00 -0300</pubDate>
      
      <guid>https://mauri870.github.io/blog/posts/audio-spectrograms-in-tensorflow/</guid>
      <description>&lt;p&gt;A Spectrogram is a picture of sound. A common approach for audio classification tasks is to use spectrograms as input and simply treat the audio as an image. After several tries I finally got an optimized way to integrate the spectrogram generation pipeline into the tensorflow computational graph.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>